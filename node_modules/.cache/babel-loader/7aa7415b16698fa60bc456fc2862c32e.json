{"ast":null,"code":"import _objectSpread from \"/Users/damianaruj/Documents/burgerbuilder/burgerapp/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/damianaruj/Documents/burgerbuilder/burgerapp/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Burger from '../../components/Burger/Burger';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.updatePurchaseState = () => {\n      const ingredients = _objectSpread({}, this.state.ingredients);\n\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/damianaruj/Documents/burgerbuilder/burgerapp/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","BuildControls","Burger","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Burger from '../../components/Burger/Burger'\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4,\n    purchasable: false\n  }\n\n  updatePurchaseState = () => {\n    const ingredients = {\n      ...this.state.ingredients\n    }\n\n    const sum = Object.keys(ingredients)\n      .map(igKey => {\n        return ingredients[igKey]\n      })\n      .reduce((sum, el) => {\n        return sum + el\n      }, 0)\n  }\n\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type]\n    const updatedCount = oldCount + 1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount\n    const priceAddition = INGREDIENT_PRICES[type]\n    const oldPrice = this.state.totalPrice\n    const newPrice = oldPrice + priceAddition\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\n  }\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type]\n    if (oldCount <= 0) {\n      return\n    }\n    const updatedCount = oldCount - 1\n    const updatedIngredients = {\n      ...this.state.ingredients\n    }\n    updatedIngredients[type] = updatedCount\n    const priceDeduction = INGREDIENT_PRICES[type]\n    const oldPrice = this.state.totalPrice\n    const newPrice = oldPrice - priceDeduction\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients })\n  }\n\n  render() {\n    const disabledInfo = {\n      ...this.state.ingredients\n    }\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    return (\n      <React.Fragment>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled={disabledInfo}\n          price={this.state.totalPrice}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default BurgerBuilder\n"]},"metadata":{},"sourceType":"module"}